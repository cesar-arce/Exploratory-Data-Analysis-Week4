ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Total' [PM2.5]* 'Emissions from motor vehicle sources in Baltimore City (MD) from 1999 to 2008')
print(chart)
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Total' [PM2.5]* 'Emissions from motor vehicle sources in Baltimore City (MD) from 1999 to 2008')
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Total [PM2.5] Emissions from motor vehicle sources in Baltimore City (MD) from 1999 to 2008')
print(chart)
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Baltimore Motor Vehicle PM[2.5] Emissions From 1999 to 2008')
print(chart)
dev.copy(png, file="plot5.png", height=480)
dev.off()
chart1 <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart1 <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('PM2.5 Emissions (million tons)')) +
ggtitle('Total Emissions from coal sources in the USA from 1999 to 2008')
print(chart1)
dev.copy(png, file="plot4.png", height=480)
dev.off()
g <- ggplot(aggByYearByCity, aes(x=year, y=Emissions, , color=city))
g <- g + geom_line() +
xlab("year") +
ylab("PM2.5 Emissions (tons)") +
ggtitle("Total PM2.5 Emissions from motor vehicle sources in Baltimore City (MD) & LA from 1999 to 2008")
print(g)
g <- ggplot(aggByYearByCity, aes(x=year, y=Emissions, , color=city))
g <- g + geom_line() +
xlab("year") +
ylab("PM2.5 Emissions (tons)") +
ggtitle("Total PM2.5 Emissions from motor vehicle sources in Baltimore City (MD) & LA from 1999 to 2008")
print(g)
g <- ggplot(aggByYearByCity, aes(x=year, y=Emissions, , color=city))
g <- g + geom_line() +
xlab("year") +
ylab("PM2.5 Emissions (tons)") +
ggtitle("Total PM2.5 Emissions from motor vehicle sources in Baltimore City (MD) & LA from 1999 to 2008")
print(g)
ggplot(baltLaEmissions, aes(x=factor(year), y=Emissions, fill=County,label = round(Emissions,2))) +
geom_bar(stat="identity") +
facet_grid(County~., scales="free") +
ylab(expression("total PM"[2.5]*" emissions in tons")) +
xlab("year") +
ggtitle(expression("Baltimore City vs Los Angeles County Motor vehicle emission in tons"))+
geom_label(aes(fill = County),colour = "yellow", fontface = "bold")
ggplot(baltLaEmissions, aes(x=factor(year), y=Emissions, fill=County,label = round(Emissions,2))) +
geom_bar(stat="identity") +
facet_grid(County~., scales="free") +
ylab(expression("total PM"[2.5]*" emissions in tons")) +
xlab("year") +
ggtitle(expression("Baltimore City vs Los Angeles County Motor vehicle emission in tons"))+
geom_label(aes(fill = County),colour = "yellow", fontface = "bold")
baltYrTypEmmFips <- summarise(group_by(filter(NEI_data, NEI_data$fips == "24510"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
laYrTypEmmFips <- summarise(group_by(filter(NEI_data, NEI_data$fips == "06037"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
baltYrTypEmmFips$County <- "Baltimore City, MD"
laYrTypEmmFips$County <- "Los Angeles County, CA"
baltLaEmissions <- rbind(baltYrTypEmmFips, laYrTypEmmFips)
####  generates plot6.png
library(ggplot2)
ggplot(baltLaEmissions, aes(x=factor(year), y=Emissions, fill=County,label = round(Emissions,2))) +
geom_bar(stat="identity") +
facet_grid(County~., scales="free") +
ylab(expression("total PM"[2.5]*" emissions in tons")) +
xlab("year") +
ggtitle(expression("Baltimore City vs Los Angeles County Motor vehicle emission in tons"))+
geom_label(aes(fill = County),colour = "yellow", fontface = "bold")
dev.copy(png, file="plot6.png", height=480)
dev.off()
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Baltimore Motor Vehicle PM[2.5] Emissions From 1999 to 2008')
print(chart)
dev.copy(png, file="plot5.png", height=480)
dev.off()
library(ggplot2)
chart1 <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart1 <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('PM2.5 Emissions (million tons)')) +
ggtitle('Total Emissions from coal sources in the USA from 1999 to 2008')
print(chart1)
chart1 <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart1 <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions')) +
ggtitle('Total [2.5]* Coal Emissions From 1999 to 2008')
print(chart1)
chart1 <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart1 <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('PM2.5 Emissions (million tons)')) +
ggtitle('Total Emissions from coal sources in the USA from 1999 to 2008')
print(chart1)
library(ggplot2)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression("PM2.5 Emissions (tons)")) +
ggtitle("Total Baltimore Emissions [PM2.5]* From 1999 to 2008")
print(chart)
dev.copy(png, file="plot3.png", height=480)
dev.off()
# aggregating NEI emmissions by year
yearly_emmissions <- aggregate(Emissions ~ year, NEI_data, sum)
# forming Baltimore data which will be NEI_data subset
baltdata <- NEI_data[NEI_data$fips=="24510", ]
# Baltimore yearly emmisisons data
baltYrEmm <- aggregate(Emissions ~ year, baltdata, sum)
cols <- c("maroon", "orange", "yellow", "Aquamarine")
barplot(height=yearly_emmissions$Emissions/1000,
names.arg=yearly_emmissions$year,
xlab="Year",
ylab=expression('Aggregated Emission'[x1000]*'PM'),
main=expression('Aggregated PM'[2.5]*' Emmissions by Year from 1999 to 2008'), col = cols)
dev.copy(png, file="plot1.png", height=480)
dev.off()
cols1 <- c("maroon", "yellow", "orange", "Aquamarine")
barplot(height=baltYrEmm$Emissions/1000,
names.arg=baltYrEmm$year,
xlab="Year",
ylab=expression('Aggregated Emission'),
main=expression('Baltimore Aggregated PM'[2.5]*' Emmissions by Year'), col = cols1)
library(ggplot2)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression("PM2.5 Emissions (tons)")) +
ggtitle("Total Baltimore Emissions [PM2.5]* From 1999 to 2008")
print(chart)
library(ggplot2)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression("PM2.5 Emissions (tons)")) +
ggtitle("Total Baltimore Emissions" [PM2.5]* "From 1999 to 2008")
print(chart)
library(ggplot2)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression("PM2.5 Emissions (tons)")) +
ggtitle("Total Baltimore Emissions" [PM2.5]* "From 1999 to 2008")
print(chart)
library(ggplot2)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression("PM2.5 Emissions (tons)")) +
ggtitle("Total Baltimore Emissions" [PM2.5]* "From 1999 to 2008")
print(chart)
library(ggplot2)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression("PM2.5 Emissions (tons)")) +
ggtitle("Total Baltimore Emissions" [PM2.5]* "From 1999 to 2008")
print(chart)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression("PM2.5 Emissions (tons)")) +
ggtitle("Total Baltimore Emissions", [PM2.5]*, "From 1999 to 2008")
print(chart)
library(ggplot2)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression("PM2.5 Emissions (tons)")) +
ggtitle("Total Baltimore Emissions From 1999 to 2008")
print(chart)
cols <- c("maroon", "orange", "yellow", "Aquamarine")
barplot(height=yearly_emmissions$Emissions/1000,
names.arg=yearly_emmissions$year,
xlab="Year",
ylab=expression('Aggregated Emission'[x1000]*'PM'),
main=expression('Aggregated PM'[2.5]*' Emmissions by Year from 1999 to 2008'), col = cols)
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Baltimore Motor Vehicle' PM[2.5]* 'Emissions From 1999 to 2008')
print(chart)
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Baltimore Motor Vehicle' PM[2.5]* 'Emissions From 1999 to 2008')
print(chart)
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
main=expression('Baltimore Motor Vehicle' PM[2.5]* 'Emissions From 1999 to 2008')
print(chart)
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
main=expression('Baltimore Motor Vehicle' PM[2.5]* 'Emissions From 1999 to 2008')
print(chart)
baltYrTypEmmFips <- summarise(group_by(filter(NEI_data, NEI_data$fips == "24510"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
laYrTypEmmFips <- summarise(group_by(filter(NEI_data, NEI_data$fips == "06037"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
baltYrTypEmmFips$County <- "Baltimore City, MD"
laYrTypEmmFips$County <- "Los Angeles County, CA"
baltLaEmissions <- rbind(baltYrTypEmmFips, laYrTypEmmFips)
####  generates plot6.png
library(ggplot2)
# Type: ON-ROAD, Fips = 24510 for Baltimore, MD Motor Vehicle PM[2.5]* Emissions Against Los Angeles, CA Fips = 06037  from 1999 to 2008
ggplot(baltLaEmissions, aes(x=factor(year), y=Emissions, fill=County,label = round(Emissions,2))) +
geom_bar(stat="identity") +
facet_grid(County~., scales="free") +
ylab(expression("total PM"[2.5]*" emissions in tons")) +
xlab("year") +
ggtitle(expression("Baltimore City vs Los Angeles County Motor vehicle emission in tons"))+
geom_label(aes(fill = County),colour = "yellow", fontface = "bold")
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Baltimore Motor Vehicle Emissions From 1999 to 2008')
print(chart)
baltYrTypEmmFips <- summarise(group_by(filter(NEI_data, NEI_data$fips == "24510"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
laYrTypEmmFips <- summarise(group_by(filter(NEI_data, NEI_data$fips == "06037"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
baltYrTypEmmFips$County <- "Baltimore City, MD"
laYrTypEmmFips$County <- "Los Angeles County, CA"
baltLaEmissions <- rbind(baltYrTypEmmFips, laYrTypEmmFips)
####  generates plot6.png
library(ggplot2)
# Type: ON-ROAD, Fips = 24510 for Baltimore, MD Motor Vehicle PM[2.5]* Emissions Against Los Angeles, CA Fips = 06037  from 1999 to 2008
ggplot(baltLaEmissions, aes(x=factor(year), y=Emissions, fill=County,label = round(Emissions,2))) +
geom_bar(stat="identity") +
facet_grid(County~., scales="free") +
ylab(expression("total PM"[2.5]*" emissions in tons")) +
xlab("year") +
ggtitle(expression("Baltimore City vs Los Angeles County Motor vehicle emission in tons"))+
geom_label(aes(fill = County),colour = "yellow", fontface = "bold")
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Baltimore Motor Vehicle Emissions From 1999 to 2008')
print(chart)
chart1 <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart1 <- chart + geom_bar(stat="identity") +
xlab('year') +
ylab(expression('PM2.5 Emissions (million tons)')) +
ggtitle('Total Emissions from coal sources in the USA from 1999 to 2008')
print(chart1)
library(ggplot2)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression('PM2.5 Emissions (tons)')) +
ggtitle('Total Baltimore Emissions From 1999 to 2008')
print(chart)
cols1 <- c("maroon", "yellow", "orange", "Aquamarine")
barplot(height=baltYrEmm$Emissions/1000,
names.arg=baltYrEmm$year,
xlab="Year",
ylab=expression('Aggregated Emission'),
main=expression('Baltimore Aggregated PM'[2.5]*' Emmissions by Year'), col = cols1)
cols <- c("maroon", "orange", "yellow", "Aquamarine")
barplot(height=yearly_emmissions$Emissions/1000,
names.arg=yearly_emmissions$year,
xlab="Year",
ylab=expression('Aggregated Emission'[x1000]*'PM'),
main=expression('Aggregated PM'[2.5]*' Emmissions by Year from 1999 to 2008'), col = cols)
ggplot(baltLaEmissions, aes(x=factor(year), y=Emissions, fill=County,label = round(Emissions,2))) +
geom_bar(stat="identity") +
facet_grid(County~., scales="free") +
ylab(expression("total PM"[2.5]*" emissions in tons")) +
xlab("year") +
ggtitle(expression("Baltimore City vs Los Angeles County Motor vehicle emission in tons"))+
geom_label(aes(fill = County),colour = "yellow", fontface = "bold")
knitr::opts_chunk$set(echo = TRUE)
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
# reading and exploring SCC data - Source Classification Code Data
SCC <- readRDS("Source_Classification_Code.rds")
# head data
head(NEI)
# string data
str(NEI)
# dimension data
dim(NEI)
# head data
head(SCC)
# string data
str(SCC)
# dimension data
dim(SCC)
# aggregating NEI emmissions by year
yearly_emmissions <- aggregate(Emissions ~ year, NEI, sum)
cols <- c("maroon", "orange", "yellow", "Aquamarine")
barplot(height=yearly_emmissions$Emissions/1000,
names.arg=yearly_emmissions$year,
xlab="Year",
ylab=expression('Aggregated Emission'[x1000]*'PM'),
main=expression('Aggregated PM'[2.5]*' Emmissions by Year from 1999 to 2008'), col = cols)
dev.copy(png, file="plot1.png", height=480)
dev.off()
# forming Baltimore data which will be NEI_data subset
baltdata <- NEI_data[NEI_data$fips=="24510", ]
# Baltimore yearly emmisisons data
baltYrEmm <- aggregate(Emissions ~ year, baltdata, sum)
cols1 <- c("maroon", "yellow", "orange", "Aquamarine")
barplot(height=baltYrEmm$Emissions/1000,
names.arg=baltYrEmm$year,
xlab="Year",
ylab=expression('Aggregated Emission'),
main=expression('Baltimore Aggregated PM'[2.5]*' Emmissions by Year'), col = cols1)
dev.copy(png, file="plot2.png", height=480)
dev.off()
# Baltimore yearly emmisisons data
baltYrTypEmm <- aggregate(Emissions ~ year+ type, baltdata, sum)
library(ggplot2)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression('PM2.5 Emissions (tons)')) +
ggtitle('Total Baltimore Emissions From 1999 to 2008')
print(chart)
dev.copy(png, file="plot3.png", height=480)
dev.off()
library(ggplot2)
chart1 <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart1 <- chart + geom_bar(stat="identity") +
xlab('year') +
ylab(expression('PM2.5 Emissions (million tons)')) +
ggtitle('Total Emissions from coal sources in the USA from 1999 to 2008')
print(chart1)
dev.copy(png, file="plot4.png", height=480)
dev.off()
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Baltimore Motor Vehicle Emissions From 1999 to 2008')
print(chart)
dev.copy(png, file="plot5.png", height=480)
dev.off()
baltYrTypEmmFips <- summarise(group_by(filter(NEI_data, NEI_data$fips == "24510"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
laYrTypEmmFips <- summarise(group_by(filter(NEI_data, NEI_data$fips == "06037"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
baltYrTypEmmFips$County <- "Baltimore City, MD"
laYrTypEmmFips$County <- "Los Angeles County, CA"
baltLaEmissions <- rbind(baltYrTypEmmFips, laYrTypEmmFips)
library(ggplot2)
# Type: ON-ROAD, Fips = 24510 for Baltimore, MD Motor Vehicle PM[2.5]* Emissions Against Los Angeles, CA Fips = 06037  from 1999 to 2008
ggplot(baltLaEmissions, aes(x=factor(year), y=Emissions, fill=County,label = round(Emissions,2))) +
geom_bar(stat="identity") +
facet_grid(County~., scales="free") +
ylab(expression("total PM"[2.5]*" emissions in tons")) +
xlab("year") +
ggtitle(expression("Baltimore City vs Los Angeles County Motor vehicle emission in tons"))+
geom_label(aes(fill = County),colour = "yellow", fontface = "bold")
dev.copy(png, file="plot6.png", height=480)
dev.off()
# forming Baltimore data which will be NEI_data subset
baltdata <- NEI_data[NEI$fips=="24510", ]
# Baltimore yearly emmisisons data
baltYrEmm <- aggregate(Emissions ~ year, baltdata, sum)
cols1 <- c("maroon", "yellow", "orange", "Aquamarine")
barplot(height=baltYrEmm$Emissions/1000,
names.arg=baltYrEmm$year,
xlab="Year",
ylab=expression('Aggregated Emission'),
main=expression('Baltimore Aggregated PM'[2.5]*' Emmissions by Year'), col = cols1)
dev.copy(png, file="plot2.png", height=480)
dev.off()
# Baltimore yearly emmisisons data
baltYrTypEmm <- aggregate(Emissions ~ year+ type, baltdata, sum)
library(ggplot2)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression('PM2.5 Emissions (tons)')) +
ggtitle('Total Baltimore Emissions From 1999 to 2008')
print(chart)
dev.copy(png, file="plot3.png", height=480)
dev.off()
library(ggplot2)
chart1 <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart1 <- chart + geom_bar(stat="identity") +
xlab('year') +
ylab(expression('PM2.5 Emissions (million tons)')) +
ggtitle('Total Emissions from coal sources in the USA from 1999 to 2008')
print(chart1)
dev.copy(png, file="plot4.png", height=480)
dev.off()
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Baltimore Motor Vehicle Emissions From 1999 to 2008')
print(chart)
dev.copy(png, file="plot5.png", height=480)
dev.off()
baltYrTypEmmFips <- summarise(group_by(filter(NEI, NEI$fips == "24510"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
laYrTypEmmFips <- summarise(group_by(filter(NEI, NEI$fips == "06037"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
baltYrTypEmmFips$County <- "Baltimore City, MD"
laYrTypEmmFips$County <- "Los Angeles County, CA"
baltLaEmissions <- rbind(baltYrTypEmmFips, laYrTypEmmFips)
library(ggplot2)
# Type: ON-ROAD, Fips = 24510 for Baltimore, MD Motor Vehicle PM[2.5]* Emissions Against Los Angeles, CA Fips = 06037  from 1999 to 2008
ggplot(baltLaEmissions, aes(x=factor(year), y=Emissions, fill=County,label = round(Emissions,2))) +
geom_bar(stat="identity") +
facet_grid(County~., scales="free") +
ylab(expression("total PM"[2.5]*" emissions in tons")) +
xlab("year") +
ggtitle(expression("Baltimore City vs Los Angeles County Motor vehicle emission in tons"))+
geom_label(aes(fill = County),colour = "yellow", fontface = "bold")
dev.copy(png, file="plot6.png", height=480)
dev.off()
library(dplyr)
## install.packages("bindrcpp")
library(bindrcpp)
## install.packages("ggplot2")
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
# reading and exploring SCC data - Source Classification Code Data
SCC <- readRDS("Source_Classification_Code.rds")
# head data
head(NEI)
# string data
str(NEI)
# dimension data
dim(NEI)
# head data
head(SCC)
# string data
str(SCC)
# dimension data
dim(SCC)
# aggregating NEI emmissions by year
yearly_emmissions <- aggregate(Emissions ~ year, NEI, sum)
cols <- c("maroon", "orange", "yellow", "Aquamarine")
barplot(height=yearly_emmissions$Emissions/1000,
names.arg=yearly_emmissions$year,
xlab="Year",
ylab=expression('Aggregated Emission'[x1000]*'PM'),
main=expression('Aggregated PM'[2.5]*' Emmissions by Year from 1999 to 2008'), col = cols)
dev.copy(png, file="plot1.png", height=480)
dev.off()
# forming Baltimore data which will be NEI_data subset
baltdata <- NEI_data[NEI$fips=="24510", ]
# forming Baltimore data which will be NEI_data subset
baltdata <- NEI[NEI$fips=="24510", ]
# Baltimore yearly emmisisons data
baltYrEmm <- aggregate(Emissions ~ year, baltdata, sum)
cols1 <- c("maroon", "yellow", "orange", "Aquamarine")
barplot(height=baltYrEmm$Emissions/1000,
names.arg=baltYrEmm$year,
xlab="Year",
ylab=expression('Aggregated Emission'),
main=expression('Baltimore Aggregated PM'[2.5]*' Emmissions by Year'), col = cols1)
dev.copy(png, file="plot2.png", height=480)
dev.off()
# Baltimore yearly emmisisons data
baltYrTypEmm <- aggregate(Emissions ~ year+ type, baltdata, sum)
library(ggplot2)
chart <- ggplot(baltYrTypEmm, aes(year, Emissions, color = type))
chart <- chart + geom_line() +
xlab("year") +
ylab(expression('PM2.5 Emissions (tons)')) +
ggtitle('Total Baltimore Emissions From 1999 to 2008')
print(chart)
dev.copy(png, file="plot3.png", height=480)
dev.off()
library(ggplot2)
chart1 <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart1 <- chart + geom_bar(stat="identity") +
xlab('year') +
ylab(expression('PM2.5 Emissions (million tons)')) +
ggtitle('Total Emissions from coal sources in the USA from 1999 to 2008')
print(chart1)
dev.copy(png, file="plot4.png", height=480)
dev.off()
chart <- ggplot(baltYrTypEmm, aes(factor(year), Emissions))
chart <- chart + geom_bar(stat="identity") +
xlab("year") +
ylab(expression('Total Emissions PM2.5 (tons)')) +
ggtitle('Baltimore Motor Vehicle Emissions From 1999 to 2008')
print(chart)
dev.copy(png, file="plot5.png", height=480)
dev.off()
baltYrTypEmmFips <- summarise(group_by(filter(NEI, NEI$fips == "24510"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
laYrTypEmmFips <- summarise(group_by(filter(NEI, NEI$fips == "06037"& type == 'ON-ROAD'), year), Emissions=sum(Emissions))
baltYrTypEmmFips$County <- "Baltimore City, MD"
laYrTypEmmFips$County <- "Los Angeles County, CA"
baltLaEmissions <- rbind(baltYrTypEmmFips, laYrTypEmmFips)
library(ggplot2)
# Type: ON-ROAD, Fips = 24510 for Baltimore, MD Motor Vehicle PM[2.5]* Emissions Against Los Angeles, CA Fips = 06037  from 1999 to 2008
ggplot(baltLaEmissions, aes(x=factor(year), y=Emissions, fill=County,label = round(Emissions,2))) +
geom_bar(stat="identity") +
facet_grid(County~., scales="free") +
ylab(expression("total PM"[2.5]*" emissions in tons")) +
xlab("year") +
ggtitle(expression("Baltimore City vs Los Angeles County Motor vehicle emission in tons"))+
geom_label(aes(fill = County),colour = "yellow", fontface = "bold")
dev.copy(png, file="plot6.png", height=480)
dev.off()
